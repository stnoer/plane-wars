@startuml
'https://plantuml.com/sequence-diagram

interface StrategyShoot {
    + {interface} List<BaseBullet> shoot(int XAircraft, int YAircraft, int speedXAircraft, int speedYAircraft, int direction,int power,int type):List<BaseBullet> ;
}

class StraightShoot  {
    + shoot(int XAircraft, int YAircraft, int speedXAircraft, int speedYAircraft, int direction,int power,int type):List<BaseBullet> ;
}
StrategyShoot <|.. StraightShoot

class CycleShoot  {
    + shoot(int XAircraft, int YAircraft, int speedXAircraft, int speedYAircraft, int direction,int power,int type):List<BaseBullet> ;
}
StrategyShoot <|.. CycleShoot

class DiffuseShoot  {
    + shoot(int XAircraft, int YAircraft, int speedXAircraft, int speedYAircraft, int direction,int power,int type):List<BaseBullet> ;
    }
StrategyShoot <|.. DiffuseShoot

class Context {
    + strategyShoot:StrategyShoot;

    + Context(StrategyShoot strategyShoot);

    + setStrategy(StrategyShoot strategyShoot):void

    + strategyShoot(int XAircraft, int YAircraft, int speedXAircraft, int speedYAircraft, int direction,int power, int type): List<BaseBullet> ;
}
Context *--> StrategyShoot
@enduml